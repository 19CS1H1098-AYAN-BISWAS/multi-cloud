syntax = "proto3";

option go_package = "aksk/proto";

service AkSk {
    rpc ListAkSk(ListAkSkRequest) returns (ListAkSkResponse) {}
    rpc GetAkSk(GetAkSkRequest) returns (GetAkSkResponse) {}
    rpc CreateAkSk(CreateAkSkRequest) returns (CreateAkSkResponse) {}
    rpc DeleteAkSk(DeleteAkSkRequest) returns (DeleteAkSkResponse) {}
}

message AkSkDetail {
    string project_id = 1;
    string user_id = 2;
    string name = 3;
    string type = 4;
    string blob = 5;
    string token = 6;
}

message ListAkSkRequest {
    int32 limit = 1;
    int32 offset = 2;
    repeated string sortKeys = 3;
    repeated string sortDirs = 4;
    map<string, string> Filter = 5;
}

message ListAkSkResponse {
    repeated AkSkDetail aksk = 1;
    int32 next = 2;
}

message GetAkSkRequest {
    string id = 1;
    AkSkDetail AkSkDetail = 2;
}

message GetAkSkResponse {
    AkSkDetail AkSkDetail = 1;
}

message CreateAkSkRequest {
    AkSkDetail aksk = 1;
}

message CreateAkSkResponse {
    AkSkDetail aksk = 1;
}

message DeleteAkSkRequest {
    string id = 1;
}

message DeleteAkSkResponse {
}


